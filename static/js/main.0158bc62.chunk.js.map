{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_ALPHABET","SORT_FIELD_LENGTH","App","useState","sortField","setSortField","isReversed","setIsReversed","initialGoods","goods","preparedGoods","sort","currentGood","nextGood","localeCompare","length","reverse","getPreparedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAMaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAIIC,EAAsB,WACtBC,EAAoB,SA2BnB,IAAMC,EAAM,WACjB,MAAkCC,mBA9BH,IA8B/B,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEMC,EA7BR,SAA0BC,EAA1B,GAA6D,IAA1BL,EAAyB,EAAzBA,UAAWE,EAAc,EAAdA,WACtCI,EAAa,YAAOD,GAqB1B,OAnBIL,GACFM,EAAcC,MAAK,SAACC,EAAaC,GAC/B,OAAQT,GACN,KAAKJ,EACH,OAAOY,EAAYE,cAAcD,GAEnC,KAAKZ,EACH,OAAOW,EAAYG,OAASF,EAASE,OAEvC,QACE,OAAO,MAKXT,GACFI,EAAcM,UAGTN,EAOcO,CACnBlB,EACA,CACEK,YACAE,eASJ,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAD,UAAsB,CACjC,WAAYhB,IAAcJ,IAE5BqB,QAAS,kBAAMhB,EAAaL,IAL9B,iCAUA,wBACEmB,KAAK,SACLD,UAAWE,IAAG,SAAD,aAAyB,CACpC,WAAYhB,IAAcH,IAE5BoB,QAAS,kBAAMhB,EAAaJ,IAL9B,4BAUA,wBACEkB,KAAK,SACLD,UAAWE,IAAG,SAAD,aAAyB,CACpC,YAAad,IAEfe,QAAS,kBAAMd,GAAeD,IALhC,sBAUEF,GAAaE,IACb,wBACEa,KAAK,SACLD,UAAU,4BACVG,QAAS,kBAzCjBhB,EA1C6B,SA2C7BE,GAAc,IAqCR,sBAUJ,6BACGC,EAAac,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YC5GnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0158bc62.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst DEFAULT_SORT_FIELD_VALUE = '';\nconst SORT_FIELD_ALPHABET = 'alphabet';\nconst SORT_FIELD_LENGTH = 'length';\n\nfunction getPreparedGoods(goods, { sortField, isReversed }) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((currentGood, nextGood) => {\n      switch (sortField) {\n        case SORT_FIELD_ALPHABET:\n          return currentGood.localeCompare(nextGood);\n\n        case SORT_FIELD_LENGTH:\n          return currentGood.length - nextGood.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState(DEFAULT_SORT_FIELD_VALUE);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const initialGoods = getPreparedGoods(\n    goodsFromServer,\n    {\n      sortField,\n      isReversed,\n    },\n  );\n\n  const clearSort = () => {\n    setSortField(DEFAULT_SORT_FIELD_VALUE);\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(`button`, `is-info`, {\n            'is-light': sortField !== SORT_FIELD_ALPHABET,\n          })}\n          onClick={() => setSortField(SORT_FIELD_ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(`button`, `is-success`, {\n            'is-light': sortField !== SORT_FIELD_LENGTH,\n          })}\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(`button`, `is-warning`, {\n            'is-light': !isReversed,\n          })}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {(sortField || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => clearSort()}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {initialGoods.map(good => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}